{"version":3,"file":"static/js/199.c3a81c53.chunk.js","mappings":"4MACA,EAAuB,wB,kBCmBvB,EAlBkB,SAACA,GAGjB,OACE,gBAAIC,UAAWC,EAAa,WAC1B,+BACE,iCACE,uBAAIF,EAAMG,UAEZ,gCAAaH,EAAMI,aAErB,SAAC,KAAI,CAACH,UAAU,MAAKI,GAAE,kBAAaL,EAAMM,IAAK,+BAKrD,ECjBA,EAAuB,wBAAvB,EAAyD,2BC8CzD,EA9BkB,SAACN,GACjB,IAXkBO,EAAQC,EAWpBC,GAAQC,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,MAGTC,EAA6C,QADjC,IAAIC,gBAAgBH,EAASI,QACVC,IAAI,QACnCC,GAhBYV,EAgBYP,EAAMO,OAhBVC,EAgBiBK,EAfpCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOb,GAAKc,EAAOd,GAAK,GAAK,EAE7Ba,EAAOb,GAAKc,EAAOd,GAAK,GAAK,CAExC,KAcA,OACE,UAAC,EAAAe,SAAQ,YACP,gBAAKpB,UAAWC,EAAgB,UAC9B,oBAAQoB,QAPa,WAEzBb,EAAQc,KAAK,iBAAiBV,EAAoB,OAAO,OAC3D,EAI4C,iBAAMA,EAAmB,aAAa,kBAE9E,eAAIZ,UAAWC,EAAa,SACzBe,EAAaO,KAAI,SAACC,GAAK,OACtB,SAAC,EAAS,CAERnB,GAAImB,EAAMnB,GACVF,OAAQqB,EAAMrB,OACdD,KAAMsB,EAAMtB,MAHPsB,EAAMnB,GAIX,QAKZ,E,SC5CA,EAA2B,gCCY3B,EAXsB,WACpB,OACE,iBAAKL,UAAWC,EAAiB,WAC/B,6CACA,cAAGD,UAAU,MAAK,2BAKxB,E,SC6BA,EA9BgB,WAEd,OAAmDyB,EAAAA,EAAAA,GAAQC,EAAAA,IAAa,GAAjEC,EAAW,EAAXA,YAAYC,EAAM,EAANA,OAAYC,EAAY,EAAjBC,KAAkBC,EAAK,EAALA,MAO9C,OALEC,EAAAA,EAAAA,YAAU,WAETL,GACD,GAAE,CAACA,IAEO,YAATC,GAEQ,gBAAK5B,UAAU,WAAU,UAAC,SAACiC,EAAA,QAAc,MAGjDF,GAGC,cAAG/B,UAAU,mBAAkB,SAAE+B,IAGzB,cAATH,GAAwBC,GAAoC,IAAtBA,EAAaK,QAItDC,QAAQC,IAAIP,IAEV,SAAC,EAAS,CAACvB,OAAQuB,MAJV,SAAC,EAAa,GAOzB,C","sources":["webpack://react-complete-guide/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-complete-guide/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","webpack://react-complete-guide/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__Q6KwW\"};","import classes from './QuoteItem.module.css';\nimport {  Link, Redirect } from 'react-router-dom';\nconst QuoteItem = (props) => {\n\n  \n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn'to={`/quotes/${props.id}`} >\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__MLz6k\",\"sorting\":\"QuoteList_sorting__GDrEn\"};","import { Fragment } from 'react';\nimport { useHistory ,useLocation} from 'react-router-dom';\n\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history=useHistory();\n  const location=useLocation();\n\n  const queryParams=new URLSearchParams(location.search);\n  const isSortingAscending=queryParams.get('sort')==='asc';\n  const sortedQuotes=sortQuotes(props.quotes,isSortingAscending)\n  const changeSortingHandler=()=>\n  {\n    history.push('/quotes?sort='+(isSortingAscending ?'desc':'asc'));\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort{isSortingAscending?'Descending':'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__EUQsM\"};","import classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <a className='btn'>\n        Add a Quote\n      </a>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","\nimport React,{useEffect} from 'react';\nimport {getAllQuotes} from '../lib/api';\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport useHttp from '../hooks/use-http';\n\n\n\nconst AllQuotes=()=>\n{\n  const {sendRequest,status,data:loadedQuotes,error}=useHttp(getAllQuotes,true);\n\n  useEffect(()=>\n  {\n   sendRequest(); \n  },[sendRequest]);\n\nif(status==='pending')\n{\n   return (<div className='centered'><LoadingSpinner /></div>)\n\n}\nif(error)\n{\n   return(\n    <p className='centered focused'>{error}</p>\n   ) \n}\nif(status==='completed'&&(!loadedQuotes||loadedQuotes.length===0))\n{\n    return <NoQuotesFound />\n}\nconsole.log(loadedQuotes);\nreturn(\n  <QuoteList quotes={loadedQuotes}/>\n\n)\n};\nexport default AllQuotes;"],"names":["props","className","classes","text","author","to","id","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","Fragment","onClick","push","map","quote","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length","console","log"],"sourceRoot":""}