{"version":3,"file":"static/js/675.31dcc537.chunk.js","mappings":"4MACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAa,SAAEF,EAAMG,UAC9C,E,SCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BCyDnI,EAnDkB,SAACH,GACjB,IAAMI,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UACrB,GAA+BE,EAAAA,EAAAA,WAAS,GAAM,eAAvCC,EAAS,KAACC,EAAY,KAoB7B,OACE,iCACA,SAAC,KAAM,CAACC,KAAMF,EAAWG,QAAS,SAACC,GAAQ,MAAG,4DAA4D,KAC1G,SAAC,EAAI,WACH,kBAAMC,QAZa,WAErBJ,GAAa,EACf,EASqCR,UAAWC,EAAcY,SAtB9D,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBb,EAAec,QAAQC,MACvCC,EAAcd,EAAaY,QAAQC,MAIzCnB,EAAMqB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAa0F,UACnFpB,EAAMwB,YACL,gBAAKvB,UAAWC,EAAgB,UAC9B,SAACuB,EAAA,QAAc,OAInB,iBAAKxB,UAAWC,EAAgB,WAC9B,kBAAOwB,QAAQ,SAAQ,qBACvB,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKzB,QAEtC,iBAAKH,UAAWC,EAAgB,WAC9B,kBAAOwB,QAAQ,OAAM,mBACrB,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKvB,QAEpC,gBAAKL,UAAWC,EAAgB,UAC9B,mBAAS6B,QAxBU,WAE3BtB,GAAa,EACd,EAqBiDR,UAAU,MAAK,gCAMjE,E,kBC9BA,EArBe,WACZ,IAAM+B,GAAQC,EAAAA,EAAAA,MACb,GAA0BC,EAAAA,EAAAA,GAAQC,EAAAA,IAA5BC,EAAW,EAAXA,YAAYC,EAAM,EAANA,QAClBC,EAAAA,EAAAA,YAAU,WAEI,cAATD,GAEDL,EAAQO,KAAK,UAEjB,GAAE,CAACF,EAAOL,IAOV,OACG,SAAC,EAAS,CAACR,UAAoB,YAATa,EAAoBhB,WAPvB,SAAAmB,GAElBJ,EAAYI,EAChB,GAOJ,C","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__9h8Dh\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__ogBoi\",\"loading\":\"QuoteForm_loading__gyIuQ\",\"control\":\"QuoteForm_control__8SqBM\",\"actions\":\"QuoteForm_actions__I8AC6\"};","import { useRef,useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntered,setIsEntered]=useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  const formFocusHnadler=()=>\n  { \n    setIsEntered(true);\n  };\n const finishenteringHandler=()=>\n {\n  setIsEntered(false);\n }\n  return (\n    <>\n    <Prompt when={isEntered} message={(location)=>'Are you sure you want to leave? All your data will be lost'}/>\n    <Card>\n      <form onFocus={formFocusHnadler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button  onClick={finishenteringHandler}className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from '../components/quotes/QuoteForm'\nimport { useEffect } from 'react';\nimport {useHistory} from 'react-router-dom';\nimport useHttp from '../hooks/use-http';\nimport { addQuote } from '../lib/api';\nconst NewQuote=()=>\n{  const history=useHistory();\n    const{sendRequest,status}=useHttp(addQuote);\n    useEffect(()=>\n    {\n      if(status==='completed')\n      {\n        history.push('/quotes')\n      }\n    },[status,history])\n    const addQuoteHandler=quoteData=>\n    {\n        sendRequest(quoteData);\n    }\n\n\n    return(\n       <QuoteForm isLoading={status==='pending'} onAddQuote={addQuoteHandler} />\n      \n      )\n}\nexport default NewQuote;"],"names":["props","className","classes","children","authorInputRef","useRef","textInputRef","useState","isEntered","setIsEntered","when","message","location","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","history","useHistory","useHttp","addQuote","sendRequest","status","useEffect","push","quoteData"],"sourceRoot":""}